// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using cotuongdemotest1.Data;

#nullable disable

namespace cotuongdemotest1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250306112840_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("cotuongdemotest1.Models.Entities.GameDb", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Board")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GameStatus")
                        .HasColumnType("integer");

                    b.Property<string>("GameWinner")
                        .HasColumnType("text");

                    b.Property<bool>("IsRedTurn")
                        .HasColumnType("boolean");

                    b.Property<string>("MoveHistory")
                        .HasColumnType("jsonb");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("cotuongdemotest1.Models.Entities.UserGameDb", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<string>("NameUser1")
                        .HasColumnType("text");

                    b.Property<string>("NameUser2")
                        .HasColumnType("text");

                    b.Property<Guid?>("UserId1")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserId2")
                        .HasColumnType("uuid");

                    b.HasKey("GameId");

                    b.ToTable("UserGames");
                });

            modelBuilder.Entity("cotuongdemotest1.Models.Entities.UserGameDb", b =>
                {
                    b.HasOne("cotuongdemotest1.Models.Entities.GameDb", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
